name: CI
on:
  push:
    branches:
      - "mamoru"
  pull_request:
    branches:
      - "mamoru"
concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  tests:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ] # list of os: https://github.com/actions/virtual-environments
    runs-on: ${{ matrix.os }}
    steps:
        - uses: actions/checkout@v3
        - run: |
            git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master

        - uses: actions/setup-go@v3
          with:
            go-version: 1.19.x

        - name: Install dependencies on Linux
          if: runner.os == 'Linux'
          run: sudo apt update && sudo apt install build-essential

        - name: Golang-ci install
          if: runner.os == 'Linux'
          run: make lintci-deps

        - uses: actions/cache@v3
          with:
            path: |
              ~/.cache/go-build
              ~/Library/Caches/go-build
              ~/go/pkg/mod
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: ${{ runner.os }}-go-

        - name: Lint
          if: runner.os == 'Linux'
          run: make lint

        # These tests are flaky
        - name: Test
          run: make test

        #- name: Data race tests
        #  run: make test-race

        - name: test-integration
          run: make test-integration

        # # TODO: make it work
        # - name: Reproducible build test
        #   run: |
        #       make geth
        #       shasum -a256 ./build/bin/geth > bor1.sha256
        #       make geth
        #       shasum -a256 ./build/bin/geth > bor2.sha256
        #       if ! cmp -s bor1.sha256 bor2.sha256; then
        #         echo >&2 "Reproducible build broken"; cat bor1.sha256; cat bor2.sha256; exit 1
        #       fi

  integration-tests:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ] # list of os: https://github.com/actions/virtual-environments
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          git submodule update --init --recursive --force
          git fetch --no-tags --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install build-essential

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: test-integration
        run: make test-integration
